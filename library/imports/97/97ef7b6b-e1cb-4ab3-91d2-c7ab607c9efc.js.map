{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Common/assets\\Scripts\\Common\\Utils.js"],"names":["Utils","maxValue","Math","floor","random","vec1","vec2","x","y","val1","val2","module","exports"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAIMA;AAEF,qBAAc;AAAA;AACb;;AAED;;;;;sCACqBC,UAAU;;AAE3B,mBAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBH,QAA3B,CAAP;AACH;;;mCAGiBI,MAAMC,MAAM;;AAE1B,mBAAQD,QAAQC,IAAR,IAAgBD,KAAKE,CAAL,IAAUD,KAAKC,CAA/B,IAAoCF,KAAKG,CAAL,IAAUF,KAAKE,CAA3D;AACH;;;4BAEUC,MAAMC,MAAM;;AAEnB,mBAAQD,OAAOC,IAAP,GAAcD,IAAd,GAAqBC,IAA7B;AACH;;;4BAEUD,MAAMC,MAAM;;AAEnB,mBAAQD,OAAOC,IAAP,GAAcD,IAAd,GAAqBC,IAA7B;AACH;;;4BAEUD,MAAMC,MAAM;;AAEnB,mBAAQD,OAAOC,IAAP,GAAcD,OAAOC,IAArB,GAA4BA,OAAOD,IAA3C;AACH;;;;;;AAEJ;;AAGDE,OAAOC,OAAP,GAAiBZ,KAAjB","file":"Utils.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Common","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n\r\nclass Utils {\r\n    \r\n    constructor() {\r\n    }\r\n    \r\n    // This will generate integer between 0 and maxValue - 1\r\n    static randomInteger(maxValue) {\r\n    \r\n        return Math.floor(Math.random() * maxValue);\r\n    }\r\n    \r\n    \r\n    static areSameVec(vec1, vec2) {\r\n    \r\n        return (vec1 && vec2 && vec1.x == vec2.x && vec1.y == vec2.y);\r\n    }\r\n    \r\n    static Min(val1, val2) {\r\n    \r\n        return (val1 < val2 ? val1 : val2);\r\n    }\r\n    \r\n    static Max(val1, val2) {\r\n    \r\n        return (val1 > val2 ? val1 : val2);\r\n    }\r\n    \r\n    static Abs(val1, val2) {\r\n        \r\n        return (val1 > val2 ? val1 - val2 : val2 - val1);\r\n    }\r\n    \r\n};\r\n\r\n\r\nmodule.exports = Utils;\r\n"]}