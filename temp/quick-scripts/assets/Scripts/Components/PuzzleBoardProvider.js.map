{"version":3,"sources":["PuzzleBoardProvider.js"],"names":["PuzzleBoardSize","require","Utils","PuzzleBoardProvider","board","undefined","stageDefinition","poemDefinition","puzzleDefinition","console","log","cc","PuzzleBoard","size","translateBoardSize","boardSize","width","x","height","y","appearingCharacters","generateAppearingChars","characterMatrix","generateMatrix","v2","targetCharacters","lines","selectedLines","i","length","j","columnCount","charIndex","isUncoveredChar","characterId","content","push","noiseCharacters","noiseChars","appearingChars","formula","findFormulaDefinition","sourceCharacterA","sourceCharacterB","randomInteger","position","boardType","TINY","SMALL","MEDIUM","LARGE","HUGE"],"mappings":"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","file":"PuzzleBoardProvider.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Components","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nvar PuzzleBoardSize = require('Constant').PuzzleBoardSize;\r\nvar Utils = require('Utils');\r\nrequire('StageDefinition');\r\nrequire('PoemDefinition');\r\nrequire('PuzzleDefinition');\r\n\r\nrequire('PuzzleBoard');\r\n\r\n\r\nclass PuzzleBoardProvider {\r\n    \r\n    constructor() {\r\n        \r\n        this.board = undefined;\r\n        \r\n        this.stageDefinition = undefined;\r\n        this.poemDefinition = undefined;\r\n        this.puzzleDefinition = undefined;\r\n        \r\n    }\r\n    \r\n    createBoard(stageDefinition) {\r\n        \r\n        if (!stageDefinition) {\r\n            return;\r\n        }\r\n        \r\n        this.stageDefinition = stageDefinition;\r\n        this.poemDefinition = stageDefinition.poemDefinition;\r\n        this.puzzleDefinition = stageDefinition.puzzleDefinition;\r\n        \r\n        console.log('PuzzleBoardProvider: creating PuzzleBoard.');\r\n        this.board = new cc.PuzzleBoard();\r\n        \r\n        var size = this.translateBoardSize(this.puzzleDefinition.boardSize);\r\n        this.board.width = size.x;\r\n        this.board.height = size.y;\r\n        \r\n        var appearingCharacters = this.generateAppearingChars();\r\n        console.log('PuzzleBoardProvider: appearingCharacters:', appearingCharacters);\r\n        \r\n        this.board.characterMatrix = this.generateMatrix(appearingCharacters);\r\n        console.log('PuzzleBoardProvider: matrix:', this.board.characterMatrix);\r\n        \r\n        return this.board;\r\n    }\r\n    \r\n    getBoardSize() {\r\n        \r\n        return cc.v2(this.board.width, this.board.height);\r\n    }\r\n    \r\n    generateAppearingChars() {\r\n        \r\n        var targetCharacters = [];\r\n        \r\n        let lines = this.puzzleDefinition.selectedLines;\r\n        for (var i = 0; i < lines.length; ++i) {\r\n            for (var j = 0; j < this.poemDefinition.columnCount; ++j) {\r\n                \r\n                var charIndex = i * this.poemDefinition.columnCount + j;\r\n                if (this.puzzleDefinition.isUncoveredChar(charIndex)) {\r\n                    continue;\r\n                }\r\n                \r\n                var characterId = this.poemDefinition.content[lines[i]][j];\r\n                targetCharacters.push(characterId);\r\n            }\r\n        }\r\n        \r\n        var noiseCharacters = this.puzzleDefinition.noiseChars;\r\n        for (var i = 0; i < noiseCharacters.length; ++i) {\r\n            \r\n            targetCharacters.push(noiseCharacters[i]);\r\n        }\r\n        \r\n        console.log('PuzzleBoardProvider: targetCharacters:', targetCharacters);\r\n        \r\n        var appearingChars = [];\r\n        for (var i = 0; i < targetCharacters.length; ++i) {\r\n            \r\n            var characterId = targetCharacters[i];\r\n            var formula = this.stageDefinition.findFormulaDefinition(characterId);\r\n            if (formula) {\r\n                appearingChars.push(formula.sourceCharacterA);\r\n                appearingChars.push(formula.sourceCharacterB);\r\n            }\r\n        }\r\n        \r\n        return appearingChars;\r\n    }\r\n    \r\n    generateMatrix(appearingCharacters) {\r\n    \r\n        //var characterMatrix = new Array(this.board.width);\r\n        var characterMatrix = [];\r\n        for (var i = 0; i <= this.board.width + 1; ++i) {\r\n            \r\n            //characterMatrix[i] = new Array(this.board.height);\r\n            characterMatrix[i] = [];\r\n        }\r\n        \r\n        for (var i = 0; i < appearingCharacters.length; ++i) {\r\n            \r\n            var characterId = appearingCharacters[i];\r\n            \r\n            var x = Utils.randomInteger(this.board.width) + 1;\r\n            var y = Utils.randomInteger(this.board.height) + 1;\r\n            \r\n            characterMatrix[x][y] = characterId;\r\n        }\r\n        \r\n        return characterMatrix;\r\n    }\r\n    \r\n    takeActionAt(position) {\r\n        \r\n        // TODO:\r\n    }\r\n    \r\n    getCharacterAt(x, y) {\r\n    \r\n        // console.log('retrieving character at ', x, y);\r\n        \r\n        if (this.board.characterMatrix[x]) {\r\n            return this.board.characterMatrix[x][y];\r\n        } else {\r\n            console.log('getCharacterAt error: matrix exceeded: ', x, y);\r\n        }\r\n    }\r\n    \r\n    translateBoardSize(boardType) {\r\n    \r\n        switch(boardType) {\r\n            case PuzzleBoardSize.TINY: {\r\n                return cc.v2(5, 6);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.SMALL: {\r\n                return cc.v2(6, 8);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.MEDIUM: {\r\n                return cc.v2(8, 10);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.LARGE: {\r\n                return cc.v2(9, 12);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.HUGE: {\r\n                return cc.v2(10, 14);\r\n                break;\r\n            }\r\n            default: {\r\n                return cc.v2(6, 8);\r\n                \r\n            }\r\n        }\r\n    }\r\n    \r\n}; \r\n\r\ncc.PuzzleBoardProvider = PuzzleBoardProvider;\r\n"]}