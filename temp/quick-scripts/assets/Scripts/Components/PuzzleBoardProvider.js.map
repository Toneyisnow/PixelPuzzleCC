{"version":3,"sources":["PuzzleBoardProvider.js"],"names":["PuzzleBoardSize","require","Utils","PuzzleBoard","PuzzleBoardStatus","PuzzleBoardProvider","handler","board","undefined","stageDefinition","poemDefinition","puzzleDefinition","console","log","cc","size","translateBoardSize","boardSize","width","x","height","y","appearingCharacters","generateAppearingChars","characterMatrix","generateMatrix","v2","targetCharacters","lines","selectedLines","i","length","j","columnCount","charIndex","isUncoveredChar","characterId","content","push","noiseCharacters","noiseChars","appearingChars","formula","findFormulaDefinition","sourceCharacterA","sourceCharacterB","randomInteger","position","status","IDLE","lastSelectedPosition","ONE_SELECTED","onChooseCharacterAt","matchingFormula","areCharactersMatching","areSameVec","onUnchooseCharacterAt","connectionPoints","connectCharacters","clearCharacterAt","onConnected","targetCharacter","onMatchNotConnected","posA","posB","charA","getCharacterAt","charB","matchFormulaDefinition","areDirectConnected","candidate","deltaX","iter","candidate1","candidate2","deltaY","minX","maxX","minY","maxY","begin","end","character","boardType","TINY","SMALL","MEDIUM","LARGE","HUGE"],"mappings":"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","file":"PuzzleBoardProvider.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Components","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nvar PuzzleBoardSize = require('Constant').PuzzleBoardSize;\r\n\r\nvar Utils = require('Utils');\r\nrequire('StageDefinition');\r\nrequire('PoemDefinition');\r\nrequire('PuzzleDefinition');\r\n\r\nvar PuzzleBoard = require('PuzzleBoard');\r\nvar PuzzleBoardStatus = PuzzleBoard.PuzzleBoardStatus;\r\n\r\n\r\nclass PuzzleBoardProvider {\r\n    \r\n    constructor(handler) {\r\n        \r\n        this.board = undefined;\r\n        \r\n        this.stageDefinition = undefined;\r\n        this.poemDefinition = undefined;\r\n        this.puzzleDefinition = undefined;\r\n        \r\n        this.handler = handler;\r\n    }\r\n    \r\n    createBoard(stageDefinition) {\r\n        \r\n        if (!stageDefinition) {\r\n            return;\r\n        }\r\n        \r\n        this.stageDefinition = stageDefinition;\r\n        this.poemDefinition = stageDefinition.poemDefinition;\r\n        this.puzzleDefinition = stageDefinition.puzzleDefinition;\r\n        \r\n        console.log('PuzzleBoardProvider: creating PuzzleBoard.');\r\n        this.board = new cc.PuzzleBoard();\r\n        \r\n        var size = this.translateBoardSize(this.puzzleDefinition.boardSize);\r\n        this.board.width = size.x;\r\n        this.board.height = size.y;\r\n        \r\n        var appearingCharacters = this.generateAppearingChars();\r\n        console.log('PuzzleBoardProvider: appearingCharacters:', appearingCharacters);\r\n        \r\n        this.board.characterMatrix = this.generateMatrix(appearingCharacters);\r\n        console.log('PuzzleBoardProvider: matrix:', this.board.characterMatrix);\r\n        \r\n        return this.board;\r\n    }\r\n    \r\n    getBoardSize() {\r\n        \r\n        return cc.v2(this.board.width, this.board.height);\r\n    }\r\n    \r\n    generateAppearingChars() {\r\n        \r\n        var targetCharacters = [];\r\n        \r\n        let lines = this.puzzleDefinition.selectedLines;\r\n        for (var i = 0; i < lines.length; ++i) {\r\n            for (var j = 0; j < this.poemDefinition.columnCount; ++j) {\r\n                \r\n                var charIndex = i * this.poemDefinition.columnCount + j;\r\n                if (this.puzzleDefinition.isUncoveredChar(charIndex)) {\r\n                    continue;\r\n                }\r\n                \r\n                var characterId = this.poemDefinition.content[lines[i]][j];\r\n                targetCharacters.push(characterId);\r\n            }\r\n        }\r\n        \r\n        var noiseCharacters = this.puzzleDefinition.noiseChars;\r\n        for (var i = 0; i < noiseCharacters.length; ++i) {\r\n            \r\n            targetCharacters.push(noiseCharacters[i]);\r\n        }\r\n        \r\n        console.log('PuzzleBoardProvider: targetCharacters:', targetCharacters);\r\n        \r\n        var appearingChars = [];\r\n        for (var i = 0; i < targetCharacters.length; ++i) {\r\n            \r\n            var characterId = targetCharacters[i];\r\n            var formula = this.stageDefinition.findFormulaDefinition(characterId);\r\n            if (formula) {\r\n                appearingChars.push(formula.sourceCharacterA);\r\n                appearingChars.push(formula.sourceCharacterB);\r\n            }\r\n        }\r\n        \r\n        return appearingChars;\r\n    }\r\n    \r\n    generateMatrix(appearingCharacters) {\r\n    \r\n        //var characterMatrix = new Array(this.board.width);\r\n        var characterMatrix = [];\r\n        for (var i = 0; i <= this.board.width + 1; ++i) {\r\n            \r\n            //characterMatrix[i] = new Array(this.board.height);\r\n            characterMatrix[i] = [];\r\n        }\r\n        \r\n        for (var i = 0; i < appearingCharacters.length; ++i) {\r\n            \r\n            var characterId = appearingCharacters[i];\r\n            \r\n            var x = Utils.randomInteger(this.board.width) + 1;\r\n            var y = Utils.randomInteger(this.board.height) + 1;\r\n            \r\n            while(characterMatrix[x][y]) {\r\n                x = Utils.randomInteger(this.board.width) + 1;\r\n                y = Utils.randomInteger(this.board.height) + 1;\r\n            }\r\n            \r\n            characterMatrix[x][y] = characterId;\r\n        }\r\n        \r\n        return characterMatrix;\r\n    }\r\n    \r\n    // When player choose character on the position\r\n    takeActionAt(position) {\r\n        \r\n        if (this.board.status == PuzzleBoardStatus.IDLE) {\r\n            \r\n            this.board.lastSelectedPosition = position;\r\n            this.board.status = PuzzleBoardStatus.ONE_SELECTED;\r\n            \r\n            this.handler.onChooseCharacterAt(position);\r\n            \r\n        } else {\r\n        \r\n            var matchingFormula = this.areCharactersMatching(position, this.board.lastSelectedPosition);\r\n            if (Utils.areSameVec(position, this.board.lastSelectedPosition) || !matchingFormula) {\r\n                \r\n                this.board.status = PuzzleBoardStatus.IDLE;\r\n                this.handler.onUnchooseCharacterAt(position, this.board.lastSelectedPosition);\r\n                return;\r\n            }\r\n            \r\n            var connectionPoints = this.connectCharacters(this.board.lastSelectedPosition, position);\r\n            if (connectionPoints && connectionPoints.length > 0) {\r\n                \r\n                // Remove the characters \r\n                this.clearCharacterAt(this.board.lastSelectedPosition);\r\n                this.clearCharacterAt(position);\r\n                this.board.status = PuzzleBoardStatus.IDLE;\r\n                \r\n                this.handler.onConnected(position, this.board.lastSelectedPosition, connectionPoints, matchingFormula.targetCharacter);\r\n            } else {\r\n            \r\n                this.board.status = PuzzleBoardStatus.IDLE;\r\n                \r\n                this.handler.onMatchNotConnected(position, this.board.lastSelectedPosition);\r\n            }\r\n        \r\n        }\r\n    }\r\n    \r\n    areCharactersMatching(posA, posB) {\r\n    \r\n        var charA = this.getCharacterAt(posA);\r\n        var charB = this.getCharacterAt(posB);\r\n        \r\n        if (!charA || !charB) {\r\n            return false;\r\n        }\r\n        \r\n        return this.stageDefinition.matchFormulaDefinition(charA, charB);\r\n    }\r\n    \r\n    connectCharacters(posA, posB) {\r\n    \r\n        console.log('connectCharacters');\r\n        \r\n        // Check One Connection\r\n        if (posA.x == posB.x && this.areDirectConnected(posA, posB)\r\n            || posA.y == posB.y && this.areDirectConnected(posA, posB)) {\r\n            return [posA, posB];\r\n        }\r\n        console.log('connectCharacters: check one connection failed.');\r\n        \r\n        // Check Two Connection\r\n        var candidate = cc.v2(posA.x, posB.y);\r\n        if (!this.getCharacterAt(candidate) && this.areDirectConnected(posA, candidate) && this.areDirectConnected(candidate, posB)) {\r\n            return [posA, candidate, posB];\r\n        }\r\n        candidate = cc.v2(posA.y, posB.x);\r\n        if (!this.getCharacterAt(candidate) && this.areDirectConnected(posA, candidate) && this.areDirectConnected(candidate, posB)) {\r\n            return [posA, candidate, posB];\r\n        }\r\n        console.log('connectCharacters: check two connection failed.');\r\n        \r\n        // Check Three Inner Connection\r\n        if (posA.x != posB.x) {\r\n            \r\n            var deltaX = (posA.x < posB.x ? 1 : -1);\r\n            var iter = posA.x + deltaX;\r\n            while (iter != posB.x) {\r\n                var candidate1 = cc.v2(iter, posA.y);\r\n                var candidate2 = cc.v2(iter, posB.y);\r\n                if (!this.getCharacterAt(candidate1) && !this.getCharacterAt(candidate2)\r\n                    && this.areDirectConnected(posA, candidate1) && this.areDirectConnected(candidate1, candidate2) && this.areDirectConnected(candidate2, posB) ) {\r\n                    return [posA, candidate1, candidate2, posB];\r\n                }\r\n                iter = iter + deltaX;\r\n            }\r\n        }\r\n        if (posA.y != posB.y) {\r\n            \r\n            var deltaY = (posA.y < posB.y ? 1 : -1);\r\n            var iter = posA.y + deltaY;\r\n            while (iter != posB.y) {\r\n                var candidate1 = cc.v2(posA.x, iter);\r\n                var candidate2 = cc.v2(posB.x, iter);\r\n                if (!this.getCharacterAt(candidate1) && !this.getCharacterAt(candidate2)\r\n                    && this.areDirectConnected(posA, candidate1) && this.areDirectConnected(candidate1, candidate2) && this.areDirectConnected(candidate2, posB) ) {\r\n                    return [posA, candidate1, candidate2, posB];\r\n                }\r\n                iter = iter + deltaY;\r\n            }\r\n        }\r\n        console.log('connectCharacters: check three inner connection failed.');\r\n        \r\n        // Check Three Outter Connection\r\n        var minX = (posA.x < posB.x ? posA.x : posB.x);\r\n        var maxX = (posA.x > posB.x ? posA.x : posB.x);\r\n        var minY = (posA.y < posB.y ? posA.y : posB.y);\r\n        var maxY = (posA.y > posB.y ? posA.y : posB.y);\r\n        \r\n        for(var i = maxX + 1; i <= this.board.width; i++) {\r\n            \r\n            var candidate1 = cc.v2(i, posA.y);\r\n            var candidate2 = cc.v2(i, posB.y);\r\n            if (!this.getCharacterAt(candidate1) && !this.getCharacterAt(candidate2)\r\n                && this.areDirectConnected(posA, candidate1) && this.areDirectConnected(candidate1, candidate2) && this.areDirectConnected(candidate2, posB) ) {\r\n                return [posA, candidate1, candidate2, posB];\r\n            }\r\n        }\r\n        for(var i = minX - 1; i >= 0; i--) {\r\n            \r\n            var candidate1 = cc.v2(i, posA.y);\r\n            var candidate2 = cc.v2(i, posB.y);\r\n            if (!this.getCharacterAt(candidate1) && !this.getCharacterAt(candidate2)\r\n                && this.areDirectConnected(posA, candidate1) && this.areDirectConnected(candidate1, candidate2) && this.areDirectConnected(candidate2, posB) ) {\r\n                return [posA, candidate1, candidate2, posB];\r\n            }\r\n        }\r\n        for(var j = maxY + 1; j <= this.board.height; j++) {\r\n            \r\n            var candidate1 = cc.v2(posA.x, j);\r\n            var candidate2 = cc.v2(posB.x, j);\r\n            if (!this.getCharacterAt(candidate1) && !this.getCharacterAt(candidate2)\r\n                && this.areDirectConnected(posA, candidate1) && this.areDirectConnected(candidate1, candidate2) && this.areDirectConnected(candidate2, posB) ) {\r\n                return [posA, candidate1, candidate2, posB];\r\n            }\r\n        }\r\n        for(var j = minY - 1; j >= 0; j--) {\r\n            \r\n            var candidate1 = cc.v2(posA.x, j);\r\n            var candidate2 = cc.v2(posB.x, j);\r\n            if (!this.getCharacterAt(candidate1) && !this.getCharacterAt(candidate2)\r\n                && this.areDirectConnected(posA, candidate1) && this.areDirectConnected(candidate1, candidate2) && this.areDirectConnected(candidate2, posB) ) {\r\n                return [posA, candidate1, candidate2, posB];\r\n            }\r\n        }\r\n        console.log('connectCharacters: check three outer connection failed.');\r\n        \r\n        \r\n        return [];\r\n    }\r\n    \r\n    // Simple check for two points to be connected\r\n    areDirectConnected(posA, posB) {\r\n        \r\n        if (posA.x == posB.x) {\r\n            \r\n            var begin = (posA.y < posB.y ? posA.y : posB.y);\r\n            var end = (posA.y > posB.y ? posA.y : posB.y);\r\n            \r\n            for(var i = begin + 1; i < end; i++) {\r\n                if (this.getCharacterAt(cc.v2(posA.x, i))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n            \r\n        } else if (posA.y == posB.y) {\r\n            \r\n            var begin = (posA.x < posB.x ? posA.x : posB.x);\r\n            var end = (posA.x > posB.x ? posA.x : posB.x);\r\n            \r\n            for(var i = begin + 1; i < end; i++) {\r\n                if (this.getCharacterAt(cc.v2(i, posA.y))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        \r\n        // If A and B are not in the same line, just return false.\r\n        return false;\r\n    }\r\n    \r\n    clearCharacterAt(position) {\r\n    \r\n        var character = this.getCharacterAt(position);\r\n        if (character && this.board.characterMatrix[position.x]) {\r\n            this.board.characterMatrix[position.x][position.y] = undefined;\r\n        }\r\n    }\r\n    \r\n    getCharacterAt(position) {\r\n    \r\n        // console.log('retrieving character at ', x, y);\r\n        \r\n        if (this.board.characterMatrix[position.x]) {\r\n            return this.board.characterMatrix[position.x][position.y];\r\n        } else {\r\n            console.log('getCharacterAt error: matrix exceeded: ', position.x, position.y);\r\n        }\r\n    }\r\n    \r\n    translateBoardSize(boardType) {\r\n    \r\n        switch(boardType) {\r\n            case PuzzleBoardSize.TINY: {\r\n                return cc.v2(5, 6);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.SMALL: {\r\n                return cc.v2(6, 8);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.MEDIUM: {\r\n                return cc.v2(8, 10);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.LARGE: {\r\n                return cc.v2(9, 12);\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.HUGE: {\r\n                return cc.v2(10, 14);\r\n                break;\r\n            }\r\n            default: {\r\n                return cc.v2(6, 8);\r\n                \r\n            }\r\n        }\r\n    }\r\n    \r\n}; \r\n\r\ncc.PuzzleBoardProvider = PuzzleBoardProvider;\r\n"]}