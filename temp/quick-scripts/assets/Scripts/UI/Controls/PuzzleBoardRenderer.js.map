{"version":3,"sources":["PuzzleBoardRenderer.js"],"names":["require","cc","Class","extends","Component","properties","boardWidth","boardHeight","poemDefinition","default","type","PoemDefinition","puzzleDefinition","PuzzleDefinition","stageDefinition","StageDefinition","anchorStartPoint","v2","anchorInterval","puzzleBoardPrefab","Prefab","boardProvider","PuzzleBoardProvider","boardRootNode","Node","init","console","log","self","createBoard","onLoad","size","getBoardSize","i","x","j","y","characterId","getCharacterAt","GlobalStorage","loadCharacterSpriteFrame","characterSpriteFrame","ii","jj","node","charSprite","addComponent","Sprite","spriteFrame","posX","posY","position","scale","addChild","start"],"mappings":"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","file":"PuzzleBoardRenderer.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\UI\\Controls","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nrequire('GlobalStorage');\r\n\r\nrequire('PoemDefinition');\r\nrequire('StageDefinition');\r\nrequire('PuzzleDefinition');\r\nrequire('PuzzleBoardProvider');\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        boardWidth: 1,\r\n        \r\n        boardHeight: 1,\r\n        \r\n        poemDefinition: {\r\n            default: null,\r\n            type: cc.PoemDefinition,\r\n        },\r\n        \r\n        puzzleDefinition: {\r\n            default: null,\r\n            type: cc.PuzzleDefinition,\r\n        },\r\n        \r\n        stageDefinition: {\r\n            default: null,\r\n            type: cc.StageDefinition,\r\n        },\r\n        \r\n        anchorStartPoint: {\r\n            default: cc.v2(0, 0),\r\n            type: cc.v2\r\n        },\r\n        \r\n        anchorInterval: 64,\r\n        \r\n        puzzleBoardPrefab: cc.Prefab,\r\n        \r\n        boardProvider: {\r\n            default: null,\r\n            type: cc.PuzzleBoardProvider,\r\n        },\r\n        \r\n        boardRootNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        \r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    init: function(stageDefinition) {\r\n    \r\n        console.log('PuzzleBoard init.');\r\n        \r\n        this.stageDefinition = stageDefinition;\r\n        this.poemDefinition = this.stageDefinition.poemDefinition;\r\n        this.puzzleDefinition = this.stageDefinition.puzzleDefinition;\r\n        \r\n        if (!this.poemDefinition || !this.puzzleDefinition) {\r\n        \r\n            console.log('poemDefinition is null.');\r\n            return;\r\n        }\r\n        \r\n        var self = this;\r\n        \r\n        this.boardProvider = new cc.PuzzleBoardProvider();\r\n        this.boardProvider.createBoard(this.stageDefinition);\r\n        \r\n    },\r\n\r\n\r\n    onLoad () {\r\n        \r\n        var self = this;\r\n        \r\n        var size = this.boardProvider.getBoardSize();\r\n        for (var i = 0; i < size.x; ++i) {\r\n            for (var j = 0; j < size.y; ++j) {\r\n        \r\n                var characterId = this.boardProvider.getCharacterAt(i, j);\r\n                \r\n                if (characterId) {\r\n                    \r\n                    console.log('got character: ', i, j, characterId);\r\n                    cc.GlobalStorage.loadCharacterSpriteFrame(characterId, i, j, function(characterSpriteFrame, ii, jj) {\r\n        \r\n                    var node = new cc.Node();\r\n                    let charSprite = node.addComponent(cc.Sprite);\r\n                    charSprite.spriteFrame = characterSpriteFrame;\r\n                    \r\n                    var posX = self.anchorStartPoint.x + ii * self.anchorInterval;\r\n                    var posY = self.anchorStartPoint.y - jj * self.anchorInterval;\r\n                    \r\n                    //var posX = -160 + ii * 64;\r\n                    //var posY = 226 - jj * 64;\r\n                    \r\n                    node.position = cc.v2(posX, posY);\r\n                    node.scale = 0.5;\r\n                    \r\n                    self.boardRootNode.addChild(node);\r\n                });\r\n                }\r\n            }\r\n        }\r\n        \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}