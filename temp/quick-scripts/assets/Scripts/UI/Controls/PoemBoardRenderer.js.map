{"version":3,"sources":["PoemBoardRenderer.js"],"names":["require","cc","Class","extends","Component","properties","boardWidth","boardHeight","poemId","poemDefinition","default","type","PoemDefinition","characterAnchors","Node","poemBoardPrefab","Prefab","init","poemDef","console","log","Object","assign","onLoad","self","lineCount","columnCount","column_count","i","j","characterId","content","GlobalStorage","loadCharacterSpriteFrame","characterSpriteFrame","node","charSprite","addComponent","Sprite","SpriteFrame","anchor","position","addChild","v2","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,gBAAR;AACAA,QAAQ,eAAR;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAERC,oBAAY,CAFJ;;AAIRC,qBAAa,CAJL;;AAMRC,gBAAQ,CANA;;AAQRC,wBAAgB;AACZC,qBAAS,IADG;AAEZC,kBAAMV,GAAGW;AAFG,SARR;;AAaRC,0BAAkB;AACdH,qBAAS,EADK;AAEdC,kBAAMV,GAAGa;AAFK,SAbV;;AAkBRC,yBAAiBd,GAAGe;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCQ,KAHP;;AAwCL;;AAEAC,UAAM,cAASC,OAAT,EAAkB;;AAEpBC,gBAAQC,GAAR,CAAY,iBAAZ;;AAEA,aAAKX,cAAL,GAAsB,IAAIR,GAAGW,cAAP,EAAtB;AACAS,eAAOC,MAAP,CAAc,KAAKb,cAAnB,EAAmCS,OAAnC;AACH,KAhDI;;AAmDLK,UAnDK,oBAmDK;;AAEN,YAAI,CAAC,KAAKd,cAAV,EAA0B;;AAEtBU,oBAAQC,GAAR,CAAY,yBAAZ;AACA;AACH;;AAED,YAAII,OAAO,IAAX;;AAEA,YAAIC,YAAY,CAAhB;AACA;AACA,YAAIC,cAAc,KAAKjB,cAAL,CAAoBkB,YAAtC;;AAIAR,gBAAQC,GAAR,CAAY,gDAAZ,EAA8DK,SAA9D,EAAyEC,WAAzE;AACA,aAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIH,SAApB,EAA+B,EAAEG,CAAjC,EAAoC;AAChC,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,WAApB,EAAiC,EAAEG,CAAnC,EAAsC;;AAElC,oBAAIC,cAAc,KAAKrB,cAAL,CAAoBsB,OAApB,CAA4BH,CAA5B,EAA+BC,CAA/B,CAAlB;AACA5B,mBAAG+B,aAAH,CAAiBC,wBAAjB,CAA0CH,WAA1C,EAAuD,UAASI,oBAAT,EAA+B;;AAElF,wBAAIC,OAAO,IAAIlC,GAAGa,IAAP,EAAX;AACA,wBAAIsB,aAAaD,KAAKE,YAAL,CAAkBpC,GAAGqC,MAArB,CAAjB;AACAF,+BAAWG,WAAX,GAAyBL,oBAAzB;;AAEA,wBAAIM,SAAShB,KAAKX,gBAAL,CAAsBe,IAAIH,SAAJ,GAAgBI,CAAtC,CAAb;AACAV,4BAAQC,GAAR,CAAY,kBAAZ,EAAgCoB,OAAOC,QAAvC;;AAEAD,2BAAOE,QAAP,CAAgBP,IAAhB;AACAA,yBAAKM,QAAL,GAAgBxC,GAAG0C,EAAH,CAAM,CAAN,EAAS,CAAT,CAAhB;AACH,iBAXD;AAYH;AACJ;AACJ,KAtFI;AAwFLC,SAxFK,mBAwFI,CAER;AA1FI;;AA4FL;AA5FJ","file":"PoemBoardRenderer.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\UI\\Controls","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nrequire('PoemDefinition');\r\nrequire('GlobalStorage');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        boardWidth: 1,\r\n        \r\n        boardHeight: 1,\r\n        \r\n        poemId: 0,\r\n        \r\n        poemDefinition: {\r\n            default: null,\r\n            type: cc.PoemDefinition,\r\n        },\r\n        \r\n        characterAnchors: {\r\n            default: [],\r\n            type: cc.Node\r\n        },\r\n        \r\n        poemBoardPrefab: cc.Prefab,\r\n        \r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    init: function(poemDef) {\r\n    \r\n        console.log('PoemBoard init.');\r\n        \r\n        this.poemDefinition = new cc.PoemDefinition();\r\n        Object.assign(this.poemDefinition, poemDef);\r\n    },\r\n\r\n\r\n    onLoad () {\r\n        \r\n        if (!this.poemDefinition) {\r\n        \r\n            console.log('poemDefinition is null.');\r\n            return;\r\n        }\r\n        \r\n        var self = this;\r\n        \r\n        let lineCount = 2;\r\n        //let lineCount = this.poemDefinition.line_count;\r\n        let columnCount = this.poemDefinition.column_count;\r\n        \r\n        \r\n        \r\n        console.log('onLoad: loading PoemDefinitions. Totallength: ', lineCount, columnCount);\r\n        for (var i = 0; i < lineCount; ++i) {\r\n            for (var j = 0; j < columnCount; ++j) {\r\n                \r\n                var characterId = this.poemDefinition.content[i][j];\r\n                cc.GlobalStorage.loadCharacterSpriteFrame(characterId, function(characterSpriteFrame) {\r\n        \r\n                    var node = new cc.Node();\r\n                    let charSprite = node.addComponent(cc.Sprite);\r\n                    charSprite.SpriteFrame = characterSpriteFrame;\r\n                    \r\n                    var anchor = self.characterAnchors[i * lineCount + j];\r\n                    console.log('anchor position:', anchor.position);\r\n                    \r\n                    anchor.addChild(node);\r\n                    node.position = cc.v2(0, 0);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}