{"version":3,"sources":["MainGameScene.js"],"names":["require","PuzzleBoardSize","cc","Class","extends","Component","properties","hintBoard_2_5","Prefab","hintBoard_2_7","hintBoard_4_5","hintBoard_4_7","puzzleBoard_Tiny","puzzleBoard_Small","puzzleBoard_Medium","anchorHintBoard","default","type","Node","anchorPuzzleBoard","btnBack","Button","btnRestart","stageId","stageDefinition","StageDefinition","onLoad","GlobalStorage","loadIntermediateValue","node","on","onBackToScene","onRefresh","console","log","loadFromFile","onLoadWithDefinition","self","definition","JSON","stringify","poemDefinition","hintBoardNode","instantiate","hintBoardRenderer","getComponent","init","addChild","boardPrefab","puzzleDefinition","boardSize","TINY","SMALL","MEDIUM","puzzleBoardNode","puzzleBoardNodeRenderer","start","handle","director","loadScene"],"mappings":"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","file":"MainGameScene.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\UI","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nrequire('GlobalStorage');\r\nrequire('StageDefinition');\r\nvar PuzzleBoardSize = require('Constant').PuzzleBoardSize;\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        hintBoard_2_5: cc.Prefab,\r\n        \r\n        hintBoard_2_7: cc.Prefab,\r\n        \r\n        hintBoard_4_5: cc.Prefab,\r\n        \r\n        hintBoard_4_7: cc.Prefab,\r\n        \r\n        puzzleBoard_Tiny: cc.Prefab,\r\n        \r\n        puzzleBoard_Small: cc.Prefab,\r\n        \r\n        puzzleBoard_Medium: cc.Prefab,\r\n        \r\n        \r\n        anchorHintBoard: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        \r\n        anchorPuzzleBoard: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        \r\n        btnBack: {\r\n            default: null,\r\n            type: cc.Button,\r\n        },\r\n        \r\n        btnRestart: {\r\n            default: null,\r\n            type: cc.Button,\r\n        },\r\n        \r\n        stageId: 0,\r\n        \r\n        stageDefinition: {\r\n            default: null,\r\n            type: cc.StageDefinition,\r\n        },\r\n        \r\n        \r\n        \r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        \r\n        this.stageId = cc.GlobalStorage.loadIntermediateValue(\"selectedStageId\");\r\n        \r\n        this.btnBack.node.on(\"click\", this.onBackToScene, this);\r\n        this.btnRestart.node.on(\"click\", this.onRefresh, this);\r\n        \r\n        \r\n        console.log('onLoad: got selectedStageId', this.stageId);\r\n        cc.StageDefinition.loadFromFile(this.stageId, this.onLoadWithDefinition, this);\r\n        \r\n    },\r\n\r\n    onLoadWithDefinition: function(self, definition) {\r\n        \r\n        \r\n        console.log('onLoadWithDefinition');\r\n        \r\n        self.stageDefinition = definition;\r\n            \r\n        if (!self.stageDefinition) {\r\n            console.log('stageDefinition is null.');\r\n            return;\r\n        }\r\n        \r\n        console.log('stageDefinition: ', JSON.stringify(self.stageDefinition.poemDefinition));\r\n        \r\n        var hintBoardNode = cc.instantiate(self.hintBoard_2_5);\r\n        var hintBoardRenderer = hintBoardNode.getComponent('HintBoardRenderer');\r\n        hintBoardRenderer.init(self.stageDefinition);\r\n        \r\n        self.anchorHintBoard.addChild(hintBoardNode);\r\n        \r\n        \r\n        // Add PuzzleBoard on the middle\r\n        var boardPrefab = self.puzzleBoard_Tiny;\r\n        switch(self.stageDefinition.puzzleDefinition.boardSize) {\r\n        \r\n            case PuzzleBoardSize.TINY: {\r\n                boardPrefab = self.puzzleBoard_Tiny;\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.SMALL: {\r\n                boardPrefab = self.puzzleBoard_Small;\r\n                break;\r\n            }\r\n            case PuzzleBoardSize.MEDIUM: {\r\n                boardPrefab = self.puzzleBoard_Medium;\r\n                break;\r\n            }\r\n            default: {\r\n            }\r\n        }\r\n        \r\n        var puzzleBoardNode = cc.instantiate(boardPrefab);\r\n        var puzzleBoardNodeRenderer = puzzleBoardNode.getComponent('PuzzleBoardRenderer');\r\n        puzzleBoardNodeRenderer.init(self.stageDefinition);\r\n        \r\n        self.anchorPuzzleBoard.addChild(puzzleBoardNode);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n\r\n    onBackToScene: function(handle) {\r\n        \r\n        cc.director.loadScene(\"SelectStageScene\");\r\n    },\r\n\r\n    onRefresh: function(handle) {\r\n        \r\n        cc.director.loadScene(\"MainGameScene\");\r\n    },\r\n\r\n\r\n\r\n    // update (dt) {},\r\n});\r\n"]}